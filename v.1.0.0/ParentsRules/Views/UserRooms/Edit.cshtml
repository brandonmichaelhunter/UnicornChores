@using ParentsRules.Extensions;
@using ParentsRules.Data;
@model ParentsRules.Models.Rooms.UserRooms

@{
    ViewData["Title"] = "Edit";
}
@inject ApplicationDbContext _context
@{ 
    string DisplayDateValue = (Model.DateCreated.HasValue == false) ? "N/A" : Model.DateCreated.Value.ToShortDateString();
}
<h2>Editing Room - <i>@Html.DisplayFor(model => model.Room)</i></h2>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="Room" class="control-label"></label>
                <input asp-for="Room" class="form-control" />
                <span asp-validation-for="Room" class="text-danger"></span>
            </div>
            <div class="form-group">

                <label  class="control-label">Author: &nbsp;@UserProfileExtensions.GetDisplayName(_context, Model.UserID)</label>
                <input type="hidden" asp-for="UserID" />
            </div>
            <div class="form-group">
                <label asp-for="DateCreated" class="control-label"></label>
                @DisplayDateValue
                <input type="hidden" asp-for="DateCreated" />
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save Changes" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
